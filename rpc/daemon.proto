syntax = "proto3";

package daemon;

option go_package = "github.com/besrabasant/ssh-tunnel-manager/rpc";

service DaemonService {
  rpc ListConfigurations (ListConfigurationsRequest) returns (ListConfigurationsResponse) {}

  rpc ListConfigurationsJSON (ListConfigurationsJSONRequest) returns (ListConfigurationsJSONResponse) {}

  rpc AddConfiguration (AddOrUpdateConfigurationRequest) returns (AddOrUpdateConfigurationResponse) {}

  rpc AddConfigurationJSON (AddOrUpdateConfigurationRequest) returns (MutationResponse) {}

  rpc UpdateConfiguration (AddOrUpdateConfigurationRequest) returns (AddOrUpdateConfigurationResponse) {}
  
  rpc UpdateConfigurationJSON (AddOrUpdateConfigurationRequest) returns (MutationResponse) {}

  rpc FetchConfiguration (FetchConfigurationRequest) returns (FetchConfigurationResponse) {}
  
  rpc DeleteConfiguration (DeleteConfigurationRequest) returns (DeleteConfigurationResponse) {}
  
  rpc StartTunnel (StartTunnelRequest) returns (StartTunnelResponse) {}
  
  rpc KillTunnel (KillTunnelRequest) returns (KillTunnelResponse) {}
  
  rpc ListActiveTunnels (ListActiveTunnelsRequest) returns (ListActiveTunnelsResponse) {}

  rpc ListActiveTunnelsJSON (ListActiveTunnelsJSONRequest) returns (ListActiveTunnelsJSONResponse) {}
}

message TunnelConfig {
  string name = 1;
  string description = 2;
  string server = 3;
  string user = 4;
  string key_file = 5;
  string remote_host = 6;
  int32 remote_port = 7;
  int32 local_port = 8;
}

enum ResponseStatus {
  Success = 0;
  Error = 1;
}

message ListConfigurationsRequest {
  string search_pattern = 1;
}

message ListConfigurationsResponse {
  string result = 1;
}

message ListConfigurationsJSONRequest {}

message ListConfigurationsJSONResponse {
  repeated TunnelConfig configs = 1;
}

message MutationResponse {
  ResponseStatus status = 1;
  string message        = 2;
  TunnelConfig data     = 3;
}

message AddOrUpdateConfigurationRequest {
  string name = 1;
  TunnelConfig data = 2;
}

message AddOrUpdateConfigurationResponse {
  string result = 1;
}


message FetchConfigurationRequest {
  string name = 1;
}

message FetchConfigurationResponse {
  ResponseStatus status = 1;
  string message = 2;
  TunnelConfig data = 3;
}

message DeleteConfigurationRequest {
  string name = 1;
}

message DeleteConfigurationResponse {
  string result = 1;
}


message StartTunnelRequest {
  string config_name = 1;
  int32 local_port = 2;
}

message StartTunnelResponse {
  string result = 1;
}

message ListActiveTunnelsRequest {
}

message ListActiveTunnelsResponse {
  string result = 1;
}

message ActiveTunnel {
  string name        = 1;
  int32  local_port  = 2;
  string remote_addr = 3;
  string local_addr  = 4;
  string server      = 5;
}

message ListActiveTunnelsJSONRequest {}

message ListActiveTunnelsJSONResponse {
  repeated ActiveTunnel tunnels = 1;
}

message KillTunnelRequest {
  string config_name = 1;
  int32 local_port = 2;
}

message KillTunnelResponse {
  string result = 1;
}